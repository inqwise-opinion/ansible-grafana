---
# This file should contain Mimir's configuration.
# https://grafana.com/docs/mimir/latest/references/configuration-parameters/

store_gateway:
  sharding_ring:
    instance_interface_names:
    - ens5
frontend:
  instance_interface_names: ["ens5"]
ruler:
  ring:
    instance_interface_names: ["ens5"]
alertmanager:
  sharding_ring:
    instance_interface_names: ["ens5"]
query_scheduler:
  ring:
    instance_interface_names: ["ens5"]


# Configuration for running Mimir in single-process mode.
# This should not be used in production.  It is only for getting started
# and development.

# Disable the requirement that every request to Mimir has a
# X-Scope-OrgID header. `anonymous` will be substituted in instead.
multitenancy_enabled: false

server:
  http_listen_port: 9009

  # Configure the server to allow messages up to 100MB.
  grpc_server_max_recv_msg_size: 104857600
  grpc_server_max_send_msg_size: 104857600
  grpc_server_max_concurrent_streams: 1000
  log_format: logfmt
  log_level: info
distributor:
  ring:
    kvstore:
      store: memberlist
    instance_interface_names: ["ens5"]
  pool:
    health_check_ingesters: true


ingester:
  ring:
    # The address to advertise for this ingester.  Will be autodiscovered by
    # looking up address on eth0 or en0; can be specified if this fails.
    # address: 127.0.0.1

    # We want to start immediately and flush on shutdown.
    min_ready_duration: 0s
    final_sleep: 0s
    num_tokens: 512

    # Use an in memory ring store, so we don't need to launch a Consul.
    kvstore:
      store: inmemory
    replication_factor: 1
    instance_interface_names: ["ens5"]

blocks_storage:
  tsdb:
    dir: {{ mimir_block_storage_base_path }}/{{ mimir_tsdb_folder }}

  bucket_store:
    sync_dir: {{ mimir_block_storage_base_path }}/{{ mimir_bucket_store_sync_folder }}

  # You can choose between local storage and Amazon S3, Google GCS and Azure storage. Each option requires additional configuration
  # as shown below. All options can be configured via flags as well which might be handy for secret inputs.
  backend: s3
  s3:
    bucket_name: mimir
    endpoint: s3.dualstack.us-east-1.amazonaws.com
    insecure: false

compactor:
  data_dir: {{ mimir_block_storage_base_path }}/{{ mimir_compactor_folder }}
  sharding_ring:
    instance_interface_names: ["ens5"]

ruler_storage:
  backend: local
  local:
    directory: {{ mimir_block_storage_base_path }}/{{ mimir_ruler_storage_folder }}

usage_stats:
  enabled: false