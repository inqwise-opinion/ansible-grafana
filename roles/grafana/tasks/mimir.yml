---
- name: check mimir RPM exist
  stat:
    path: "{{ mimir_rpm_package }}"
  register: mimir_rpm_install
  tags: installation

- name: download mimir RPM from http
  get_url:
    dest: "/tmp/{{ mimir_rpm_package }}"
    url: "{{ default_mimir_rpm_url }}"
    checksum: sha256:{{ default_mimir_sha256_rpm_url }}
  when: mimir_rpm_install.stat.exists == False and (mimir_rpm_url | default(default_mimir_rpm_url)).startswith('http')
  tags: installation

- name: download mimir from s3
  amazon.aws.s3_object:
    bucket: artifactory-opinion-stg
    object: /mimir-2.12.0_arm64.rpm
    dest: "/tmp/{{mimir.rpm}}"
    mode: get
  when: mimir_rpm_install.stat.exists == False and (mimir_rpm_url | default(default_mimir_rpm_url)).startswith('s3')
  tags: installation

# - name: check mimir_sha256 RPM exist
#   stat:
#     path: "{{ mimir_sha256_rpm_package }}"
#   register: mimir_sha256_rpm_install
#   tags: installation

# - name: download mimir_sha256 RPM from http
#   get_url:
#     dest: "/tmp/{{ mimir_sha256_rpm_package }}"
#     url: "{{ default_mimir_sha256_rpm_url }}"
#   when: mimir_sha256_rpm_install.stat.exists == False and (mimir_sha256_rpm_url | default(default_mimir_sha256_rpm_url)).startswith('http')
#   tags: installation

# - name: download mimir_sha256 from s3
#   amazon.aws.s3_object:
#     bucket: artifactory-opinion-stg
#     object: /mimir-2.12.0_arm64.rpm-sha-256
#     dest: "/tmp/{{ mimir_sha256_rpm_package }}"
#     mode: get
#   when: mimir_sha256_rpm_install.stat.exists == False and (mimir_rpm_url | default(default_mimir_rpm_url)).startswith('s3')
#   tags: installation

- name: install mimir Repository
  ansible.builtin.package:
    name: "{{ mimir_rpm_package }}"
    state: present
    disable_gpg_check: yes
  tags: installation

- name: copy config template to mimir folder
  template:
    src: config.yml.j2
    dest: "{{ config_remote_path }}"
  tags: installation